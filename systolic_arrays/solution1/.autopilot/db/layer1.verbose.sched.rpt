

================================================================
== Vitis HLS Report for 'layer1'
================================================================
* Date:           Wed May  4 09:44:09 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        systolic_arrays
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  10.00 ns|  14.512 ns|     2.70 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_35_1   |        ?|        ?|         ?|          -|          -|     ?|        no|
        | + VITIS_LOOP_37_2  |        ?|        ?|        11|          4|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 109
* Pipeline : 1
  Pipeline-0 : II = 4, D = 11, States = { 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 14 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 3 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.26>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %aa, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 110 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %bb1, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 111 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ss, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 112 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ORIGEN, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 113 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %DESTINO, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 114 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (3.63ns)   --->   "%DESTINO_read = read i32 @_ssdm_op_Read.ap_fifo.i32P0A, i32 %DESTINO"   --->   Operation 115 'read' 'DESTINO_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 116 [1/1] (3.63ns)   --->   "%ORIGEN_read = read i32 @_ssdm_op_Read.ap_fifo.i32P0A, i32 %ORIGEN"   --->   Operation 116 'read' 'ORIGEN_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %DESTINO_out, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 117 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (3.63ns)   --->   "%write_ln61 = write void @_ssdm_op_Write.ap_fifo.i32P0A, i32 %DESTINO_out, i32 %DESTINO_read" [data_flow_example2_prueba1.cpp:61]   --->   Operation 118 'write' 'write_ln61' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %bb1, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 119 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %aa, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 120 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ss, void @empty_9, i32 0, i32 0, void @empty_17, i32 0, i32 0, void @empty_17, void @empty_17, void @empty_17, i32 0, i32 0, i32 0, i32 0, void @empty_17, void @empty_17"   --->   Operation 121 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (1.58ns)   --->   "%br_ln35 = br void" [data_flow_example2_prueba1.cpp:35->data_flow_example2_prueba1.cpp:61]   --->   Operation 122 'br' 'br_ln35' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 2.52>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%j_V = phi i31 0, void %entry, i31 %add_ln878, void %._crit_edge.loopexit.i"   --->   Operation 123 'phi' 'j_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (2.52ns)   --->   "%add_ln878 = add i31 %j_V, i31 1"   --->   Operation 124 'add' 'add_ln878' <Predicate = true> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i31 %j_V" [data_flow_example2_prueba1.cpp:24->data_flow_example2_prueba1.cpp:61]   --->   Operation 125 'zext' 'zext_ln24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (2.47ns)   --->   "%icmp_ln878 = icmp_slt  i32 %zext_ln24, i32 %DESTINO_read"   --->   Operation 126 'icmp' 'icmp_ln878' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%br_ln35 = br i1 %icmp_ln878, void %.exit, void %.split3.i" [data_flow_example2_prueba1.cpp:35->data_flow_example2_prueba1.cpp:61]   --->   Operation 127 'br' 'br_ln35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%specloopname_ln35 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [data_flow_example2_prueba1.cpp:35->data_flow_example2_prueba1.cpp:61]   --->   Operation 128 'specloopname' 'specloopname_ln35' <Predicate = (icmp_ln878)> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (1.58ns)   --->   "%br_ln37 = br void" [data_flow_example2_prueba1.cpp:37->data_flow_example2_prueba1.cpp:61]   --->   Operation 129 'br' 'br_ln37' <Predicate = (icmp_ln878)> <Delay = 1.58>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%ret_ln61 = ret" [data_flow_example2_prueba1.cpp:61]   --->   Operation 130 'ret' 'ret_ln61' <Predicate = (!icmp_ln878)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.25>
ST_3 : Operation 131 [1/1] (0.00ns)   --->   "%temp = phi i32 0, void %.split3.i, i32 %temp_1, void %.split.i"   --->   Operation 131 'phi' 'temp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 132 [1/1] (0.00ns)   --->   "%i_V = phi i31 0, void %.split3.i, i31 %i_V_1, void %.split.i"   --->   Operation 132 'phi' 'i_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 133 [1/1] (2.52ns)   --->   "%i_V_1 = add i31 %i_V, i31 1"   --->   Operation 133 'add' 'i_V_1' <Predicate = true> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 134 [1/1] (0.00ns)   --->   "%i_V_cast = zext i31 %i_V"   --->   Operation 134 'zext' 'i_V_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 135 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 135 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 136 [1/1] (2.47ns)   --->   "%icmp_ln878_1 = icmp_slt  i32 %i_V_cast, i32 %ORIGEN_read"   --->   Operation 136 'icmp' 'icmp_ln878_1' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 137 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %icmp_ln878_1, void %._crit_edge.loopexit.i, void %.split.i" [data_flow_example2_prueba1.cpp:37->data_flow_example2_prueba1.cpp:61]   --->   Operation 137 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.63>
ST_4 : Operation 138 [1/1] (3.63ns)   --->   "%aa_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %aa" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 138 'read' 'aa_read' <Predicate = (icmp_ln878_1)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_4 : Operation 139 [1/1] (3.63ns)   --->   "%bb1_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %bb1" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 139 'read' 'bb1_read' <Predicate = (icmp_ln878_1)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%tmp = bitcast i32 %aa_read" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 140 'bitcast' 'tmp' <Predicate = (icmp_ln878_1)> <Delay = 0.00>
ST_5 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_1 = bitcast i32 %bb1_read" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 141 'bitcast' 'tmp_1' <Predicate = (icmp_ln878_1)> <Delay = 0.00>
ST_5 : Operation 142 [4/4] (5.70ns)   --->   "%mul_i = fmul i32 %tmp, i32 %tmp_1" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 142 'fmul' 'mul_i' <Predicate = (icmp_ln878_1)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 143 [3/4] (5.70ns)   --->   "%mul_i = fmul i32 %tmp, i32 %tmp_1" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 143 'fmul' 'mul_i' <Predicate = (icmp_ln878_1)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 144 [2/4] (5.70ns)   --->   "%mul_i = fmul i32 %tmp, i32 %tmp_1" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 144 'fmul' 'mul_i' <Predicate = (icmp_ln878_1)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 145 [1/4] (5.70ns)   --->   "%mul_i = fmul i32 %tmp, i32 %tmp_1" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 145 'fmul' 'mul_i' <Predicate = (icmp_ln878_1)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 146 [5/5] (7.25ns)   --->   "%temp_1 = fadd i32 %mul_i, i32 %temp" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 146 'fadd' 'temp_1' <Predicate = (icmp_ln878_1)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 14.5>
ST_10 : Operation 147 [4/5] (7.25ns)   --->   "%temp_1 = fadd i32 %mul_i, i32 %temp" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 147 'fadd' 'temp_1' <Predicate = (icmp_ln878_1)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 14.5>
ST_11 : Operation 148 [3/5] (7.25ns)   --->   "%temp_1 = fadd i32 %mul_i, i32 %temp" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 148 'fadd' 'temp_1' <Predicate = (icmp_ln878_1)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 14.5>
ST_12 : Operation 149 [2/5] (7.25ns)   --->   "%temp_1 = fadd i32 %mul_i, i32 %temp" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 149 'fadd' 'temp_1' <Predicate = (icmp_ln878_1)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 14.5>
ST_13 : Operation 150 [1/1] (0.00ns)   --->   "%specloopname_ln37 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [data_flow_example2_prueba1.cpp:37->data_flow_example2_prueba1.cpp:61]   --->   Operation 150 'specloopname' 'specloopname_ln37' <Predicate = (icmp_ln878_1)> <Delay = 0.00>
ST_13 : Operation 151 [1/5] (7.25ns)   --->   "%temp_1 = fadd i32 %mul_i, i32 %temp" [data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61]   --->   Operation 151 'fadd' 'temp_1' <Predicate = (icmp_ln878_1)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 152 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 152 'br' 'br_ln0' <Predicate = (icmp_ln878_1)> <Delay = 0.00>

State 14 <SV = 3> <Delay = 5.70>
ST_14 : Operation 153 [4/4] (5.70ns)   --->   "%mul_i_i = fmul i32 %temp, i32 -2" [data_flow_example2_prueba1.cpp:8]   --->   Operation 153 'fmul' 'mul_i_i' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 4> <Delay = 5.70>
ST_15 : Operation 154 [3/4] (5.70ns)   --->   "%mul_i_i = fmul i32 %temp, i32 -2" [data_flow_example2_prueba1.cpp:8]   --->   Operation 154 'fmul' 'mul_i_i' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 5> <Delay = 5.70>
ST_16 : Operation 155 [2/4] (5.70ns)   --->   "%mul_i_i = fmul i32 %temp, i32 -2" [data_flow_example2_prueba1.cpp:8]   --->   Operation 155 'fmul' 'mul_i_i' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 6> <Delay = 5.70>
ST_17 : Operation 156 [1/4] (5.70ns)   --->   "%mul_i_i = fmul i32 %temp, i32 -2" [data_flow_example2_prueba1.cpp:8]   --->   Operation 156 'fmul' 'mul_i_i' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 7> <Delay = 4.43>
ST_18 : Operation 157 [2/2] (4.43ns)   --->   "%conv_i_i = fpext i32 %mul_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 157 'fpext' 'conv_i_i' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 19 <SV = 8> <Delay = 4.43>
ST_19 : Operation 158 [1/2] (4.43ns)   --->   "%conv_i_i = fpext i32 %mul_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 158 'fpext' 'conv_i_i' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 20 <SV = 9> <Delay = 6.51>
ST_20 : Operation 159 [21/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 159 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 10> <Delay = 6.51>
ST_21 : Operation 160 [20/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 160 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 22 <SV = 11> <Delay = 6.51>
ST_22 : Operation 161 [19/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 161 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 23 <SV = 12> <Delay = 6.51>
ST_23 : Operation 162 [18/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 162 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 24 <SV = 13> <Delay = 6.51>
ST_24 : Operation 163 [17/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 163 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 25 <SV = 14> <Delay = 6.51>
ST_25 : Operation 164 [16/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 164 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 26 <SV = 15> <Delay = 6.51>
ST_26 : Operation 165 [15/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 165 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 27 <SV = 16> <Delay = 6.51>
ST_27 : Operation 166 [14/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 166 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 28 <SV = 17> <Delay = 6.51>
ST_28 : Operation 167 [13/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 167 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 29 <SV = 18> <Delay = 6.51>
ST_29 : Operation 168 [12/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 168 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 30 <SV = 19> <Delay = 6.51>
ST_30 : Operation 169 [11/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 169 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 31 <SV = 20> <Delay = 6.51>
ST_31 : Operation 170 [10/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 170 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 32 <SV = 21> <Delay = 6.51>
ST_32 : Operation 171 [9/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 171 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 33 <SV = 22> <Delay = 6.51>
ST_33 : Operation 172 [8/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 172 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 34 <SV = 23> <Delay = 6.51>
ST_34 : Operation 173 [7/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 173 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 35 <SV = 24> <Delay = 6.51>
ST_35 : Operation 174 [6/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 174 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 36 <SV = 25> <Delay = 6.51>
ST_36 : Operation 175 [5/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 175 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 37 <SV = 26> <Delay = 6.51>
ST_37 : Operation 176 [4/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 176 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 38 <SV = 27> <Delay = 6.51>
ST_38 : Operation 177 [3/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 177 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 39 <SV = 28> <Delay = 6.51>
ST_39 : Operation 178 [2/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 178 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 40 <SV = 29> <Delay = 6.51>
ST_40 : Operation 179 [1/21] (6.51ns)   --->   "%tmp_i = dexp i64 @llvm.exp.f64, i64 %conv_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 179 'dexp' 'tmp_i' <Predicate = true> <Delay = 6.51> <CoreInst = "DExp_fulldsp">   --->   Core 42 'DExp_fulldsp' <Latency = 20> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'dexp'> <InPorts = 1> <OutPorts = 1>

State 41 <SV = 30> <Delay = 7.29>
ST_41 : Operation 180 [7/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 180 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 181 [7/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 181 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 31> <Delay = 7.29>
ST_42 : Operation 182 [6/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 182 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 183 [6/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 183 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 32> <Delay = 7.29>
ST_43 : Operation 184 [5/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 184 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 185 [5/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 185 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 33> <Delay = 7.29>
ST_44 : Operation 186 [4/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 186 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 187 [4/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 187 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 34> <Delay = 7.29>
ST_45 : Operation 188 [3/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 188 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 189 [3/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 189 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 35> <Delay = 7.29>
ST_46 : Operation 190 [2/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 190 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 191 [2/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 191 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 36> <Delay = 7.29>
ST_47 : Operation 192 [1/7] (7.29ns)   --->   "%sub_i_i = dsub i64 1, i64 %tmp_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 192 'dsub' 'sub_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 193 [1/7] (7.29ns)   --->   "%add_i_i = dadd i64 %tmp_i, i64 1" [data_flow_example2_prueba1.cpp:8]   --->   Operation 193 'dadd' 'add_i_i' <Predicate = true> <Delay = 7.29> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 7.29> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 37> <Delay = 4.55>
ST_48 : Operation 194 [59/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 194 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 38> <Delay = 4.55>
ST_49 : Operation 195 [58/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 195 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 39> <Delay = 4.55>
ST_50 : Operation 196 [57/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 196 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 40> <Delay = 4.55>
ST_51 : Operation 197 [56/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 197 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 41> <Delay = 4.55>
ST_52 : Operation 198 [55/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 198 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 42> <Delay = 4.55>
ST_53 : Operation 199 [54/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 199 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 43> <Delay = 4.55>
ST_54 : Operation 200 [53/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 200 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 44> <Delay = 4.55>
ST_55 : Operation 201 [52/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 201 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 45> <Delay = 4.55>
ST_56 : Operation 202 [51/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 202 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 46> <Delay = 4.55>
ST_57 : Operation 203 [50/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 203 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 47> <Delay = 4.55>
ST_58 : Operation 204 [49/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 204 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 48> <Delay = 4.55>
ST_59 : Operation 205 [48/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 205 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 49> <Delay = 4.55>
ST_60 : Operation 206 [47/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 206 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 50> <Delay = 4.55>
ST_61 : Operation 207 [46/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 207 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 51> <Delay = 4.55>
ST_62 : Operation 208 [45/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 208 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 52> <Delay = 4.55>
ST_63 : Operation 209 [44/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 209 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 53> <Delay = 4.55>
ST_64 : Operation 210 [43/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 210 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 54> <Delay = 4.55>
ST_65 : Operation 211 [42/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 211 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 55> <Delay = 4.55>
ST_66 : Operation 212 [41/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 212 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 56> <Delay = 4.55>
ST_67 : Operation 213 [40/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 213 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 57> <Delay = 4.55>
ST_68 : Operation 214 [39/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 214 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 69 <SV = 58> <Delay = 4.55>
ST_69 : Operation 215 [38/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 215 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 59> <Delay = 4.55>
ST_70 : Operation 216 [37/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 216 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 71 <SV = 60> <Delay = 4.55>
ST_71 : Operation 217 [36/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 217 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 61> <Delay = 4.55>
ST_72 : Operation 218 [35/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 218 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 73 <SV = 62> <Delay = 4.55>
ST_73 : Operation 219 [34/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 219 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 63> <Delay = 4.55>
ST_74 : Operation 220 [33/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 220 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 75 <SV = 64> <Delay = 4.55>
ST_75 : Operation 221 [32/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 221 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 76 <SV = 65> <Delay = 4.55>
ST_76 : Operation 222 [31/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 222 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 77 <SV = 66> <Delay = 4.55>
ST_77 : Operation 223 [30/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 223 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 67> <Delay = 4.55>
ST_78 : Operation 224 [29/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 224 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 68> <Delay = 4.55>
ST_79 : Operation 225 [28/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 225 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 69> <Delay = 4.55>
ST_80 : Operation 226 [27/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 226 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 81 <SV = 70> <Delay = 4.55>
ST_81 : Operation 227 [26/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 227 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 71> <Delay = 4.55>
ST_82 : Operation 228 [25/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 228 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 72> <Delay = 4.55>
ST_83 : Operation 229 [24/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 229 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 73> <Delay = 4.55>
ST_84 : Operation 230 [23/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 230 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 74> <Delay = 4.55>
ST_85 : Operation 231 [22/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 231 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 75> <Delay = 4.55>
ST_86 : Operation 232 [21/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 232 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 87 <SV = 76> <Delay = 4.55>
ST_87 : Operation 233 [20/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 233 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 77> <Delay = 4.55>
ST_88 : Operation 234 [19/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 234 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 78> <Delay = 4.55>
ST_89 : Operation 235 [18/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 235 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 90 <SV = 79> <Delay = 4.55>
ST_90 : Operation 236 [17/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 236 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 80> <Delay = 4.55>
ST_91 : Operation 237 [16/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 237 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 81> <Delay = 4.55>
ST_92 : Operation 238 [15/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 238 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 93 <SV = 82> <Delay = 4.55>
ST_93 : Operation 239 [14/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 239 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 83> <Delay = 4.55>
ST_94 : Operation 240 [13/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 240 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 84> <Delay = 4.55>
ST_95 : Operation 241 [12/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 241 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 96 <SV = 85> <Delay = 4.55>
ST_96 : Operation 242 [11/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 242 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 97 <SV = 86> <Delay = 4.55>
ST_97 : Operation 243 [10/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 243 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 98 <SV = 87> <Delay = 4.55>
ST_98 : Operation 244 [9/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 244 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 99 <SV = 88> <Delay = 4.55>
ST_99 : Operation 245 [8/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 245 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 100 <SV = 89> <Delay = 4.55>
ST_100 : Operation 246 [7/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 246 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 101 <SV = 90> <Delay = 4.55>
ST_101 : Operation 247 [6/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 247 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 102 <SV = 91> <Delay = 4.55>
ST_102 : Operation 248 [5/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 248 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 103 <SV = 92> <Delay = 4.55>
ST_103 : Operation 249 [4/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 249 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 104 <SV = 93> <Delay = 4.55>
ST_104 : Operation 250 [3/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 250 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 105 <SV = 94> <Delay = 4.55>
ST_105 : Operation 251 [2/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 251 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 106 <SV = 95> <Delay = 4.55>
ST_106 : Operation 252 [1/59] (4.55ns)   --->   "%div_i_i = ddiv i64 %sub_i_i, i64 %add_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 252 'ddiv' 'div_i_i' <Predicate = true> <Delay = 4.55> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 4.55> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 107 <SV = 96> <Delay = 5.20>
ST_107 : Operation 253 [2/2] (5.20ns)   --->   "%temp2 = fptrunc i64 %div_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 253 'fptrunc' 'temp2' <Predicate = true> <Delay = 5.20> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.20> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 108 <SV = 97> <Delay = 5.20>
ST_108 : Operation 254 [1/2] (5.20ns)   --->   "%temp2 = fptrunc i64 %div_i_i" [data_flow_example2_prueba1.cpp:8]   --->   Operation 254 'fptrunc' 'temp2' <Predicate = true> <Delay = 5.20> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 1> <II = 1> <Delay = 5.20> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 109 <SV = 98> <Delay = 3.63>
ST_109 : Operation 255 [1/1] (0.00ns)   --->   "%bitcast_ln174 = bitcast i32 %temp2" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 255 'bitcast' 'bitcast_ln174' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 256 [1/1] (3.63ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %ss, i32 %bitcast_ln174" [/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 256 'write' 'write_ln174' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_109 : Operation 257 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 257 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.27ns
The critical path consists of the following:
	fifo read on port 'DESTINO' [12]  (3.63 ns)
	fifo write on port 'DESTINO_out' (data_flow_example2_prueba1.cpp:61) [15]  (3.63 ns)

 <State 2>: 2.52ns
The critical path consists of the following:
	'phi' operation ('j_V') with incoming values : ('add_ln878') [21]  (0 ns)
	'add' operation ('add_ln878') [22]  (2.52 ns)

 <State 3>: 7.26ns
The critical path consists of the following:
	'phi' operation ('temp') with incoming values : ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [30]  (0 ns)
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 4>: 3.63ns
The critical path consists of the following:
	fifo read on port 'aa' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [39]  (3.63 ns)

 <State 5>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [43]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [43]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [43]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [43]  (5.7 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 10>: 14.5ns
The critical path consists of the following:
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)
	'phi' operation ('temp') with incoming values : ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [30]  (0 ns)
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 11>: 14.5ns
The critical path consists of the following:
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)
	'phi' operation ('temp') with incoming values : ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [30]  (0 ns)
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 12>: 14.5ns
The critical path consists of the following:
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)
	'phi' operation ('temp') with incoming values : ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [30]  (0 ns)
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 13>: 14.5ns
The critical path consists of the following:
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)
	'phi' operation ('temp') with incoming values : ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [30]  (0 ns)
	'fadd' operation ('temp', data_flow_example2_prueba1.cpp:41->data_flow_example2_prueba1.cpp:61) [44]  (7.26 ns)

 <State 14>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i_i', data_flow_example2_prueba1.cpp:8) [47]  (5.7 ns)

 <State 15>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i_i', data_flow_example2_prueba1.cpp:8) [47]  (5.7 ns)

 <State 16>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i_i', data_flow_example2_prueba1.cpp:8) [47]  (5.7 ns)

 <State 17>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul_i_i', data_flow_example2_prueba1.cpp:8) [47]  (5.7 ns)

 <State 18>: 4.44ns
The critical path consists of the following:
	'fpext' operation ('conv_i_i', data_flow_example2_prueba1.cpp:8) [48]  (4.44 ns)

 <State 19>: 4.44ns
The critical path consists of the following:
	'fpext' operation ('conv_i_i', data_flow_example2_prueba1.cpp:8) [48]  (4.44 ns)

 <State 20>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 21>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 22>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 23>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 24>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 25>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 26>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 27>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 28>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 29>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 30>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 31>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 32>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 33>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 34>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 35>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 36>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 37>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 38>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 39>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 40>: 6.51ns
The critical path consists of the following:
	'dexp' operation ('tmp_i', data_flow_example2_prueba1.cpp:8) [49]  (6.51 ns)

 <State 41>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 42>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 43>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 44>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 45>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 46>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 47>: 7.3ns
The critical path consists of the following:
	'dsub' operation ('sub_i_i', data_flow_example2_prueba1.cpp:8) [50]  (7.3 ns)

 <State 48>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 49>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 50>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 51>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 52>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 53>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 54>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 55>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 56>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 57>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 58>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 59>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 60>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 61>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 62>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 63>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 64>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 65>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 66>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 67>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 68>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 69>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 70>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 71>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 72>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 73>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 74>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 75>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 76>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 77>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 78>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 79>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 80>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 81>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 82>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 83>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 84>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 85>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 86>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 87>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 88>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 89>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 90>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 91>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 92>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 93>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 94>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 95>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 96>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 97>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 98>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 99>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 100>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 101>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 102>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 103>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 104>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 105>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 106>: 4.55ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', data_flow_example2_prueba1.cpp:8) [52]  (4.55 ns)

 <State 107>: 5.2ns
The critical path consists of the following:
	'fptrunc' operation ('temp2', data_flow_example2_prueba1.cpp:8) [53]  (5.2 ns)

 <State 108>: 5.2ns
The critical path consists of the following:
	'fptrunc' operation ('temp2', data_flow_example2_prueba1.cpp:8) [53]  (5.2 ns)

 <State 109>: 3.63ns
The critical path consists of the following:
	fifo write on port 'ss' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) [55]  (3.63 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
